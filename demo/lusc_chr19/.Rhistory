dim(gg_klk12_cc)
length(gg_klk12_cc)
gg_klk12_cc
length(klk12_gl)
names(klk12_gl)
ranges(klk12_gl[["gene9315"]])
ranges(klk12_gl[["gene9316"]])
klk12_uniontx
ranges(klk12_gl[["gene9317"]])
ranges(klk12_gl[["gene9318"]])
klk12_gl1$e
ranges(klk12_gl1$e)
reduce(ranges(klk12_gl1$e))
bb
dim(mcols(klk12_gl1))
dim(mcols(klk12_gl1))
mcols(klk12_gl1)
klk12_gl1
dim(mcols(klk12_gl1$e))
a <- mcols(klk12_gl1$e)
dim(a)
dim(mcols(klk12_gl1))
b <- mcols(klk12_gl1$e)[paste0("s", 1:177)]
dim(b)
b[1:5, 1:5]
b <- b+1
b <- as.data.frame(b)+1
b
dim(values(klk12_gl1$e))
a <- cbind(mcols(klk12_gl1$e),
                             DataFrame(log10(as.data.frame(
                                 values(klk12_gl1$e)[paste0("s", 1:177)])+1))
                             )
dim(a)
names(a)
autoplot(klk12_gl$e)
autoplot(klk12_gl1$e)
autoplot(klk12_gl1$e, lty=1)
autoplot(klk12_gl1)
autoplot(klk12_gl1[1])
?intersect
setdiff(ranges(klk12_gl1$e))
setdiff(ranges(klk12_gl1$e))
?reduce
disjoin(ranges(klk12_gl1$e))
ranges(klk12_gl1$e)
disjointBins(ranges(klk12_gl1$e))
names(ranges(klk12_gr11)
)
names(ranges(klk12_gr11))
start(klk12_gr11)
end(klk12_gr11)
end(klk12_gr11) <- end(klk12_gr11)-1
coord_trans
coord_trans(ytrans="log10")
class(a)
summary(a)
length(a)
a[[1]]
a[1]
class(a[1])
summary(a[1])
summary(a[1][[1]])
summary(a[1][1])
grobs(a)
a@grobs
a@grobs[[2]]
a@grobs[[3]]
a@grobs[[3]] + scale_fill_manual("red")
summary(a@grobs[[3]])
summary(a@grobs[[3]]@ggplot)
a@grobs[[3]]@ggplot
a@grobs[[3]]@ggplot + scale_fill_manual(values="red")
a@grobs[[3]]@ggplot + scale_fill_manual(values=c("blue", "red"))
a@grobs[[3]]@ggplot + scale_color_manual(values=c("blue", "red"))
a@grobs[[3]]@ggplot + aes(color="red")
a@grobs[[3]]@ggplot + aes(color="red", guide=FALSE)
a@grobs[[3]]@ggplot + aes(color="red", guide==FALSE)
a@grobs[[3]]@ggplot + aes(color="red", guide=FALSE)
a@grobs[[3]]@ggplot + aes(color="red") + scale_color_manual(guide=FALSE)
a@grobs[[3]]@ggplot + aes(color="red") + theme(guide=FALSE)
a@grobs[[3]]@ggplot + aes(color="red") + theme(legend.position=FALSE)
a@grobs[[3]]@ggplot + aes(color="red") + theme(legend.position="none")
a@grobs[[3]]@ggplot + aes(fill="white") + theme(legend.position="none")
a@grobs[[3]]@ggplot + aes(fill=white) + theme(legend.position="none")
a@grobs[[3]]@ggplot + aes(fill=I("white")) + theme(legend.position="none")
a@grobs[[3]]@ggplot + aes(fill=a) + theme(legend.position="none")
a@grobs[[3]]@ggplot + aes(fill) + theme(legend.position="none")
a@grobs[[3]]@ggplot + aes(fill="temp") + scale_fill_manual(values="white") + theme(legend.position="none")
a@grobs[[3]]@ggplot + aes(fill="temp") + scale_fill_manual(values=) + theme(legend.position="none")
a
length(a@grobs[[3]]@ggplot)
(a@grobs[[3]]@ggplot)[[1]]
(a@grobs[[3]]@ggplot)[[2]]
(a@grobs[[3]]@ggplot)[[2]]
print(a@grobs[[3]]@ggplot[[2]])
plot(a@grobs[[3]]@ggplot[[2]])
plot(a@grobs[[3]]@ggplot)
plot(a@grobs[[3]]@ggplot + position_identity()
)
plot(a@grobs[[3]]@ggplot + position_identity())
plot(a@grobs[[3]]@ggplot + position_stack())
plot(a@grobs[[3]]@ggplot + position_dodge())
plot(a@grobs[[3]]@ggplot)
a
a@grobs[[3]]
a@grobs[[3]] + position_stack()
a@grobs[[3]]@ggplot + position_stack()
plot(a@grobs[[3]]@ggplot + position_stack())
plot(a@grobs[[3]]@ggplot)
plot(a@grobs[[3]])
plot(a@grobs[[3]]@ggplot + ggtitle("apple"))
plot(a@grobs[[3]]@ggplot + position_jitter())
a@grobs[[3]]@ggplot
summary(a@grobs[[3]]@ggplot)
plot(a@grobs[[3]]@ggplot + aes(ymin=3, ymax=4)
)
plot(a@grobs[[3]]@ggplot + aes(y=3, ymin=3, ymax=4))
plot(a@grobs[[3]]@ggplot + aes(y=3, ymin=3, ymax=4))
plot(a@grobs[[3]]@ggplot + aes(y=identity, ymin=identity-.4, ymax=identity+.4))
plot(a@grobs[[3]]@ggplot + aes(y=identity, ymin=identity-.4, ymax=identity+.4))
a@grobs[[3]]@ggplot[[2][1]]
a@grobs[[3]]@ggplot[2][[1]]
class(a@grobs[[3]]@ggplot[2][[1]])
a@grobs[[3]]@ggplot[2][[1]][[1]]
a@grobs[[3]]@ggplot[2][[1]][[1]][[1]]
a@grobs[[3]]@ggplot[2][[1]][[1]][1]
class(a@grobs[[3]]@ggplot[2][[1]][[1]])
length(a@grobs[[3]]@ggplot[2][[1]][[1]])
a@grobs[[3]]@ggplot[2][[1]][[1]][1]
a@grobs[[3]]@ggplot[2][[1]][[1]][[1]]
a@grobs[[3]]@ggplot[2][[1]][[1]]$mapping
a@grobs[[3]]@ggplot[2][[1]][[1]]$mapping$y
a@grobs[[3]]@ggplot[2][[1]][[1]]$mapping$y <- identity
plot(a@grobs[[3]]@ggplot)
b
b + aes(color="a", fill="b")
b + aes(color="a", fill="b")
b
plotRangesLinkedToData
getMethod(plotRangesLinkedToData, "ggbio")
getMethod(plotRangesLinkedToData, "GRanges")
showMethods("plotRangesLinkedToData")
getMethod(plotRangesLinkedToData, signature(data="GRanges"))
getMethod("plotRangesLinkedToData", signature(data="GRanges"))
getMethod("plotRangesLinkedToData", signature("GRanges"))
getMethod("plotRangesLinkedToData", signature("GRanges"))
ggbio::plotRangesLinkedToData
ggbio::plotRangesLinkedToData.GRanges
ggbio::::plotRangesLinkedToData.GRanges
ggbio:::plotRangesLinkedToData.GRanges
ggbio:::plotRangesLinkedToData
getMethod("plotRangesLinkedToData", signature(GRanges))
getMethod("plotRangesLinkedToData", signature(GRanges))
a@grobs[[1]]
a@grobs[[1]]@ggplot
summary(a@grobs[[1]])
summary(a@grobs[[1]]@ggplot)
a
2
summary(a@grbos[[1]]@ggplot)
summary(a@grobs[[1]]@ggplot)
names(a@grobs[[1]]@ggplot$data)
dim(pc$rotation)
nc
rmarkdown::render("lusc_chr19.R")
dim(klk12_v)
klk12_v
klk12_e
klk12_el2
klk1_el2
klk12_el1
dim(klk12_tj)
dim(klk12_ej$kind)
table(klk12_ej$kind)
dim(klk12_ej)
klk12_ej[1:5,1:5]
klk12_ej[1:5,1:10]
klk12_ej$stop - klk12_ej$start
dim(g2)
length(g2)
g2
attr(g2)
attr(g2,e)
 get.edge.attribute(g2)
 attributes(g2)
 vertex.attributes(g2)
 edge.attributes(g2)
 g2$w
weights(g2)
get.edgelist(g2)
klk12_vw2
vertex.attributes(g2)$weight
vertex.attributes(g2)$w <- klk12_vw2
g2$
gaps
g2
ls()
class(klk12_gr1)
dim(klk12_gr1)
length(klk12_gr1)
ranges(klk12_gr1)
plot(klk12_gr1)
autoplot(klk12_gr1)
names(klk12_gr1)
names(values(klk12_gr1))
cc <- klk12_gr1
names(values(klk12_gr1))
pmatch("s", names(values(klk12_gr1)))
pmatch(names(values(klk12_gr1)), "s")
)
grep("^s", names(values(cc))
)
grepl("^s", names(values(cc)))
sum(grepl("^s", names(values(cc))))
dim(depth)
depth[1:5, 1:5]
class(depth)
dim(depth)
p_e
p_e
p_j
rowMeans(depth[p_e,])
rowMeans(depth[p_e, ])
p_e
rowMeans(depth[exon_row, ])
exon_row
dim(depth[exon_row, ])
class(depth)
rowMeans(depth[exon_row, ])
range(cc)
ranges(cc)
ranges(cc)[exon_row]
ranges(cc)[exon_row]$start
start(ranges(cc)[exon_row])
ggplot(gg_e) + geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax))
ggplot(gg_e) + geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax))
dim(gg_e)
gg_e[1:5, 1:10]
ggplot(gg_e) + geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax))
ggplot(gg_e, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax))
ggplot(gg_e, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax)) + geom_rect()
ggplot(gg_e, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax)) + geom_rect()
dim(gg_e)
head(gg_e)
head(gg_e)
class(gg_e$variable)
class(gg_e$variable)
ggplot(gg_e, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax)) + geom_rect()
ggplot(gg_e, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, color=value)) + geom_rect()
ggplot(gg_e, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, color=log10(value+1))) + geom_rect()
class(gg_e$value)
sort(c(1, 3, 5, 2,6)
)
order(c(1, 3, 5, 2,6))
dim(pca$x)
dim(pca$x)
dim(pca$x)
dim(gg_e)
?hclust
plot(a)
a
?hclust
a$order
b
table(b)
table(b)
width(ranges(cc))
end(ranges(cc)) - start(ranges(cc))
gaps(ranges(cc))
gaps(ranges(cc)[exon_row])
n
dim(depth)
range(bounds)
as.numeric(range(bounds))
as.vector(range(bounds))
range(as.numeric(range(bounds)))
range(as.vector(range(bounds)))
range(as.vector(bounds))
rowSums(depth==0)
dim(depth)
depth[1:5, 1:5]
aaa <- apply(depth, 1, sort)
dim(aaa)
aaa <- t(aaa)
a[1:5, 1:5]
aaa[1:5, 1:5]
ggplot(gg_e,
       aes(xmin=xmin, xmax=xmax,
           ymin=ymin, ymax=ymax,
           color=log10(value+1),
           fill=log10(value+1))) +
    geom_rect() +
    scale_color_continuous("expr", low="#f7fcfd", high="#4d004b", guide=FALSE) +
    scale_fill_continuous("expr", low="#f7fcfd", high="#4d004b", guide=FALSE) +
    scale_y_continuous(breaks=NULL) +
    annotate("rect", xmin=start(bounds)[exon_row], xmax=end(bounds)[exon_row],
             ymin=1, ymax=n+1, alpha=1, color="black", fill=NA) +
    annotate("segment", x=start(bounds)[junc_row], xend=end(bounds)[junc_row],
             y=yjitter, yend=yjitter)
        depth2 <- t(apply(depth, 1, sort))
    ##con
    gg_e <- data.frame(xmin=start(ranges(cc)[exon_row]),
                       xmax=end(ranges(cc)[exon_row]),
                       depth2[exon_row, ])
    gg_e <- melt(gg_e, id.vars=c("xmin", "xmax"))
    gg_e$ymin <- as.numeric(gg_e$variable)
    gg_e$ymax <- gg_e$ymin + 1

head(gg_e)
head(gg_e)
max(gg_e$valbin
)
dim(gg_e)
plot(gg_e$valbin)


max(gg_e$value)
plot(gg_e$valbin)
table(gg_e$valbin)
177*13=
a
177*13
log10(8000)
log2(8000)
log(8000)
sort_sep <- FALSE
sort_idx = 1
hm_scale <- "log10"
2
n
bounds
width(bounds)
start(bounds)[junc_row]
start(bounds)[junc_row][1]
g_obj
g_obj
range(cc)
range(ranges(cc))
range(as.vector(cc))
range(as.vector(range(cc))
)
range(as.vector(ranges(cc)))
range(as.vector(ranges(cc)))
width(cc)
width(ranges(cc))
width(as.vector(ranges(cc)))
range(as.vector(ranges(cc)))
width(range(as.vector(ranges(cc))))
diff(range(as.vector(ranges(cc))))
bounds[junc_row][1]
width(bounds[junc_row][1])
g_obj)
g_obj
g_obj
g_obj
seqnames(cc)
as.character(seqname(cc))
as.character(seqnames(cc))
values(seqnames(cc))
seqnames(bounds)
seqnames(cc[1])
paste0("coordinates ", seqnames(cc[1]))
paste0("coordinates ", seqnames(cc[1]))
plot(depth[junc_row,]
)
matplot(t(depth[junc_row,]), type='l', lty=1)
matplot(t(log10(depth[junc_row,])+1), type='l', lty=1)
matplot(t(log10(depth[junc_row,]+1)), type='l', lty=1)
matplot(t(log10(depth[junc_row,])), type='l', lty=1)
rowsums(depth[junc_row, ] > 0)
rowSums(depth[junc_row, ] > 0)
rowSums(depth[junc_row, ] > 0) / n
round(rowSums(depth[junc_row, ] > 0) / n, 2)
plot(round(rowSums(depth[junc_row, ] > 0) / n, 2))
plot(round(rowSums(depth[junc_row, ] > 0) / n, 2), ylim=c(0,1))
colorRamp(c("#f7fbff", "#047760"))
crp2(.2)
crp2(.2)
198.4 %% 16
16^6.4
16*6.4
16*6 
198.4 / 16 
12 *16 
as.hexmode(198.4)
as.hexmode(198)
as.hexmode(round(crp2(.2))
)
hexmode(round(crp2(.2))
)
cat("#", as.hexmode(round(crp2(.2))))
paste0("#", as.hexmode(round(crp2(.2))))
paste0(c("#", as.hexmode(round(crp2(.2)))))
paste0(c("#", as.hexmode(round(crp2(.2)))), collapse="")
paste0("#", as.hexmode(round(crp2(.2))), collapse="")
paste0(as.hexmode(round(crp2(.2))))
paste0(as.hexmode(round(crp2(.2))), collapse="")
.rgb2hex(crp2(.2))
e_prop
rowSums(depth[junc_row, ] > 0) / n
crp2(.5)
.rgb2hex(crp2(.5))
.rgb2hex(crp2(.5))
paste0("<", 10^(1:v_max+1)
)
paste0("<", 10^(1:v_max+1)
10^1
paste0("<", 2, "e", 1:(v_max+1))
paste0("< ", 2, "e", 1:(v_max+1))
dim(gg_e)
head(gg_e)
head(gg_j)
head(gg_j
)
dim(gg_ej)
dim(gg_e
)
dim(gg_j)
head(gg_ej)
head(gg_j)
g_obj %+% gg_ej
start(bounds)[junc_row]
dbinom(6, 10, .5)
qbinom(6, 10, .5)
pbinom(6, 10, .5)
1-pbinom(6, 10, .5)
1-pbinom(600, 1000, .5)
save("klk12_gr1", file="klk12_gl1.rdata")
list.files()
heatgraphs(klk12_gr1)
heatgraphs(klk12_gr1, log_base=5)
heatgraphs(klk12_gr1, log_base=2)
heatgraphs(klk12_gr1, log_base=8)
heatgraphs(klk12_gr1, log_base=0)
heatgraphs(klk12_gr1, log_base=10, bin=FALSE)
heatgraphs(klk12_gr1, log_base=10, bin=FALSE)
heatgraphs(klk12_gr1, log_base=2, bin=FALSE)
heatgraphs(klk12_gr1, log_base=2, bin=FALSE, sort_set=TRUE)
heatgraphs(klk12_gr1, log_base=2, bin=FALSE, sort_sep=TRUE)
heatgraphs(klk12_gr1, log_base=10, bin=TRUE, sort_sep=TRUE)
g_obj
g_obj
load("klk12_gl1.rdata")
ls()
}
junc_y
junc_y+n*s_size
junc_x
letters[1:5]
2
n
